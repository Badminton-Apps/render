services:
  - type: web
    name: client
    env: static
    repo: https://github.com/Badminton-Apps/badman.git
    plan: starter
    branch: main
    rootDir: code
    staticPublishPath: dist/apps/client
    buildFilter:
      paths:
        - apps/client/**
        - libs/frontend/**
    buildCommand: npm install --no-optional; npm run build client:build:render
    autoDeploy: false
    envVars:
      - fromGroup: client
      - fromGroup: GLOBAL

  - type: web
    name: api
    env: node
    region: frankfurt
    repo: https://github.com/Badminton-Apps/badman.git
    plan: starter
    branch: main
    rootDir: code
    buildFilter:
      paths:
        - apps/api/**
        - libs/backend/**
    buildCommand: npm install --no-optional; npm run build api:build:production
    startCommand: node ./dist/apps/api/main.js
    autoDeploy: false
    envVars:
      - fromGroup: server
      - fromGroup: GLOBAL
    domains:
      - api.badman.app

  - type: worker
    name: worker-sync
    env: docker
    dockerfilePath: ./apps/worker/sync/Dockerfile
    dockerContext: ./
    region: frankfurt
    repo: https://github.com/Badminton-Apps/badman.git
    plan: starter
    branch: main
    rootDir: code
    buildFilter:
      paths:
        - apps/worker/sync/**
        - libs/backend/**
    autoDeploy: false
    envVars:
      - fromGroup: server
      - fromGroup: GLOBAL

  # next
  - type: web
    name: client-next
    env: node
    region: frankfurt
    repo: https://github.com/Badminton-Apps/badman-next.git
    plan: starter
    branch: main
    buildFilter:
      paths:
        - apps/badman/**
        - libs/frontend/**
      ignoredPaths:
        - apps/badman/src/assets/CHANGELOG.md
    buildCommand: yarn install --frozen-lockfile; npx nx reset; yarn build:ssr:render
    startCommand: node dist/badman/server/main.js
    autoDeploy: true
    domains:
      - beta.badman.app
    envVars:
      - fromGroup: client-next
      - fromGroup: GLOBAL

  - type: web
    name: client-next-static
    env: static
    repo: https://github.com/Badminton-Apps/badman-next.git
    plan: starter
    branch: main
    staticPublishPath: dist/badman/browser
    buildFilter:
      paths:
        - apps/badman/**
        - libs/frontend/**
      ignoredPaths:
        - apps/badman/src/assets/CHANGELOG.md
    buildCommand: yarn install --frozen-lockfile; npx nx reset; yarn build badman:build:render
    autoDeploy: true
    envVars:
      - fromGroup: client-next
      - fromGroup: GLOBAL

  - type: web
    name: api-next
    env: docker
    region: frankfurt
    repo: https://github.com/Badminton-Apps/badman-next.git
    plan: starter
    branch: main
    buildFilter:
      paths:
        - apps/api/**
        - libs/backend/**
    autoDeploy: true
    envVars:
      - fromGroup: server-next
      - fromGroup: GLOBAL
    domains:
      - api-next.badman.app
  - type: worker
    name: worker-sync-next
    env: docker
    dockerfilePath: ./apps/worker/sync/Dockerfile
    dockerContext: ./
    region: frankfurt
    repo: https://github.com/Badminton-Apps/badman-next.git
    plan: starter
    branch: main
    buildFilter:
      paths:
        - apps/worker/sync/**
        - libs/backend/**
    autoDeploy: true
    envVars:
      - fromGroup: server-next
      - fromGroup: GLOBAL

  # Services
  - type: redis
    name: redis
    plan: free
    region: frankfurt
    ipAllowList: [] # only allow internal connections
    maxmemoryPolicy: allkeys-lru

databases:
  - name: badman
    region: frankfurt
    plan: standard
    databaseName: badman
    user: badman
    ipAllowList: []
